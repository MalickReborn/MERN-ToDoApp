name: CICD
on: push
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Docker-compose build & run
        run: |
          touch ./backend/.env
          echo DB_HOST=${{ secrets.DB_HOST }} >> ./backend/.env
          echo DB_PORT=${{ secrets.DB_PORT }} >> ./backend/.env
          echo DB_USER=${{ secrets.DB_USER }} >> ./backend/.env
          echo DB_PASS=${{ secrets.DB_PASS }} >> ./backend/.env
          echo DB_NAME=${{ secrets.DB_NAME }} >> ./backend/.env
          echo API_BASE=${{ secrets.API_BASE }} >> ./backend/.env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> ./backend/.env
          echo REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} >> ./backend/.env
          touch ./frontend/.env
          echo REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} >> ./frontend/.env
          make build
          make run

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: frontend > Build, tag and push image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
        working-directory: frontend
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: backend > Build, tag and push image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        working-directory: backend
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: nginx > Build, tag and push image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nginx
          IMAGE_TAG: ${{ github.sha }}
        working-directory: nginx
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG