name: CICD
on: push
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: frontend > Build, tag and push image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
        working-directory: frontend
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      -name: frontend deploy task definition rendering
       id: frontend-web
       uses: aws-actions/amazon-ecs-render-task-definition@v1
       with:
        task-definition: .github/ecs-task-definitions/frontend.json
        container-name: frontend-service
        image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy Frontend
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.frontend-web.outputs.task-definition }}
          service: frontend-service
          cluster: ToDoApp
          wait-for-service-stability: true
          codedeploy-appspec: .github/app-spec/frontend.appspec.yaml

